{
	"name": "recoverabletrycatch",
	"version": "1.0.2",
	"description": "This is a little package that brings into play a simple API similar to the `try-catch-finally` syntax to retrieve the main computation after any error was handled.",
	"main": "dist/index.js",
	"scripts": {
		"test": "jest",
		"build": "rollup -c",
		"watch": "rollup -cw"
	},
	"files": [
		"/dist"
	],
	"keywords": [
		"try",
		"catch",
		"js",
		"recoverable"
	],
	"author": "Andrea Simone Costa aka jfet97 <andrysimo1997@gmail.com>",
	"license": "MIT",
	"devDependencies": {
		"jest": "^24.8.0",
		"rollup": "^1.18.0",
		"rollup-plugin-babel-minify": "^9.0.0",
		"rollup-plugin-cleanup": "^3.1.1"
	},
	"repository": {
		"type": "git",
		"url": "git+https://github.com/jfet97/recoverabletrycatch.git"
	},
	"jest": {
		"transform": {
			"^.+\\.js$": "babel-jest"
		}
	},
	"dependencies": {
		"@babel/core": "^7.5.5",
		"@babel/preset-env": "^7.5.5",
		"babel-jest": "^24.8.0"
	}
}
